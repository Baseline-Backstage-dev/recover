on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - main
jobs:
  lint:
    name: Linting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Run linting
        run: |
          make install
          make lint
  run_tests:
    name: Testing
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Run tests
        run: |
          make install
          make test
  build_and_deploy:
    name: Deploying
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Print GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ secrets.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Prepare lambda
      run: |
        make install
        make lambda
    - name: Prepare pulumi
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      run: |
        source venv/bin/activate
        pulumi login s3://pulumi-state-manager/example
        pulumi stack select ${{ github.event.repository.name }} --create
        pulumi config set ${{ github.event.repository.name }}:stage prod
        pulumi up -y
